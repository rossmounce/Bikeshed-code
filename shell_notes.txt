#rsync
rsync -avh --progress /folder/directory/file.mp4 /new/folder/file.mp4
rsync -avz -e ssh remoteuser@remotehost:/remote/dir /this/dir/

#scp directory recursive
scp -r /path/  user@computer:/path-to-copy-to/

#check access log
grep -i 'Accepted' /var/log/auth.log
grep sshd.\*Failed /var/log/auth.log | less
grep sshd.*Did /var/log/auth.log | less

#connect, get internal with ifconfig
ssh -vv -L 12345:IP:80 -p <port> user@IP

#Display last 5 modified files. Bottom is newest
ls -Art | tail -n 5

#count number of character X in file
fgrep -o X file.txt | wc -l            
# same thing in awk 
awk '{c+=gsub(s,s)}END{print c}' s='\?' file.txt

#Delete before abc
sed 's/^.*abc/abc/'

#Remove leading zeroes
sed 's/^0*//'

# print only lines of 65 characters or longer http://www.pement.org/awk/awk1line.txt
 awk 'length > 64'

#Find & print missing numbers in sequence of consecutive numbers (need to be pre-sorted 1 2 3...)
awk 'NR-1{if($1!=(_+1))print _}{_=$1}' file

#print word and number of its occurence in file for all words, using perl OR sed
perl -0777 -lape's/\s+/\n/g' FILENAME | sort | uniq -c | sort -nr
cat FILENAME | sed s/' '/\\n/g | sort | uniq -c | sort -nr

#Rename all matching files in folder, use -d to overwrite existing files with that name silently w/o permission!
mmv "*.pdf.txt" "#1.txt" 

#when uniq doesnt seem to be working as expected
sort -u file.txt

#convert bootstrap savetree files from TNT into phyutility compatible tree files
find . -name alltrees.tre -exec sed -i -e '/tree(s)/d' -e '/proc-;/d' -e 's/\*/;/g' -e 's/\s/,/g' -e 's/\s/,/g' -e 's/)(/),(/g' -e 's/,)/)/g' {} \;

#get the average of column8 across hundreds of csvs assuming 1 header row
sed '/^1,/,$d'
(ls *.csv | while read filename ; do awk '{sum+=$8} END { print "Average for " FILENAME " = ",sum/(NR-1)}' $filename ; done)

#get chars n taxa
(ls *.tnt | while read filename ; do sed -n 2p ; done)

#find all PDFs in . and below and copy them to aaaPDFs
find . -type f -iname "*.pdf" -exec cp "{}" aaaPDFs/ \;

#sort file by line length, longest line first
awk '{ print length($0) " " $0; }' filename.txt | sort -r -n | cut -d ' ' -f 2-

#recursive count number of files
find . -type f -print | wc -l

#ubuntu, list of most recently installed packages
cat /var/log/dpkg.log | grep "\ install\ "

# print section of file between two regular expressions (inclusive)
 sed -n '/Iowa/,/Montana/p'             # case sensitive
 
#in context of TNT log files
sed -n '/Consistency index/,/Retention index/p'
sed -n '/Retention index/,/Again/p'
#EVEN BETTER, assuming multiple all in one logfile - gives CIs
awk '/Consistency/ { show[NR+4]++  } show[NR]' CIs.log | awk '{print $2}'

(ls *.tnt | while read filename ; do fgrep -o ? $filename | wc -l ; done)

#extracts length L from TNT log files
grep 'Best score: ' batch2.log | cut -d ' ' -f 3  | sed  's/\.//g'

#extract ILD p-values from multiple logfiles, alphabetically-ordered
grep 'P value' *.log | awk '{ print substr( $0, length($0) - 8, length($0) ) }'

#extract sum of lengths for original partitions
sed -n '/tree lengths       replicates/,/sum of lengths for original partition/p' *.log | 
grep '\*   ' | sed 's/*..*//g' > origl.txt

#sum all numbers in file
awk '{s+=$0} END {print s}'  file.log

#useful for converting from TNT (from 0) to PAUP (from 1) numbering
perl -pe 's/\d+/$& > -1 ? $&+1 : $&/ge'

#get MEANNS for HER from PTP log file
grep 'Best score:' file.log |  cut -c 1-18 | awk -F: '{print $2}' | awk '{s+=$0} END {print s}'

#extract ONLY consensus tree results for IRD  
awk '/2   /' 2allog | awk '/ -/' | cut -c 6-8 > distances.out

#chop to separate URLs APP
tr "\"" "\n" < 2pdf.txt > out.txt

#useful for citeulike RTF export, gets rid of [Smith2008] before each citation
sed -i 's/\[.*]//g' rm.rtf

#recursively change file extensions from .so to .dylib
find -L . -type f -name "*.so" -print0 | while IFS= read -r -d '' FNAME; do
    mv -- "$FNAME" "${FNAME%.so}.dylib"
done
